{"version":3,"sources":["Loader.js","DataContext.js","ExclusiveSelection.js","APIs.js","AreaChart.js","data-utils.js","Extensions.js","MultipleSelection.js","Filters.js","Features.js","RealApp.js","data.js","App.js","serviceWorker.js","scrollbars.js","index.js"],"names":["Loader","className","DataContext","React","createContext","ExclusiveSelection","props","id","items","currentItem","currentIndex","onSelect","Fragment","map","item","i","itemId","checked","type","name","value","onClick","onChange","_","htmlFor","getAPIs","data","apis","Set","categories","category","Object","keys","api","add","APIs","useContext","setAPIName","apiName","Circle","color","style","width","height","viewBox","cx","cy","r","fill","toPercent","decimal","toFixed","renderTooltipContentImpl","valueFormatter","o","payload","total","reduce","result","entry","reverse","index","renderTooltipContentPercentOfTotal","renderTooltipContentPercent","v","Legend","colors","percentOfTotal","length","filter","k","last","sum","array","percent","byNumber","a","b","Math","sign","parseFloat","FooChart","startMonth","extensionName","featureName","showFeature","justAPI","chartData","totalDevicesByMonth","apiByMonth","forEach","cat","count","availability","numAPI","fromEntries","dataToAPIChartData","valuesToAmountsPerMonthMap","Map","feature","features","amountForEachMonth","amountsPerMonth","get","set","amountForMonth","entries","values","sortedValues","sort","numMonths","column","push","dataToFeatureChartData","extensionByMonth","countsByMonth","extensions","numExtension","dataToExtensionChartData","stackOffset","ResponsiveContainer","AreaChart","margin","top","right","left","bottom","CartesianGrid","strokeDasharray","XAxis","dataKey","tickFormatter","Date","toLocaleString","month","tick","YAxis","domain","Tooltip","content","animationDuration","Area","stackId","stroke","fillOpacity","class","getPlatforms","platforms","platform","getBrowsers","browsers","browser","getExtensions","extension","Extensions","setExtensionName","MultipleSelection","selectedItems","has","e","Filters","selectedPlatforms","selectedBrowsers","setPlatformFilter","setBrowserFilter","getFeatures","Features","setFeatureName","d3","replace","initSetFromString","str","validValues","initialValues","split","s","includes","RealApp","q","URLSearchParams","window","location","search","useState","dataParam","setDataParam","allPlatforms","allBrowsers","setShowFeature","useSet","selectedPlatformsSetAPI","selectedBrowsersSetAPI","handlePopState","reset","join","p","useEffect","size","params","url","URL","href","toString","console","log","history","pushState","addEventListener","removeEventListener","Provider","toggle","min","max","undefined","random","randArray","num","arr","randFeature","webgl","webgl2","webgpu","sampleData","JSON","stringify","wait","ms","Promise","resolve","setTimeout","getData","error","fetch","req","json","Error","msg","App","setData","setError","alt","src","Boolean","hostname","match","parent","document","createElement","setAttribute","classList","child","appendChild","body","firstChild","clientWidth","removeChild","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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AIA,EAAI,OAClC/B,IAlBD,CACL0L,MAvHK,CACL9H,aAAc0H,EAAU,IACxBnH,SAAUrE,OAAOgE,YApDF,CACf,2BACA,2BACA,mBACA,oBACA,qBACA,6BACA,sBACA,mCACA,iCACA,0BACA,+BACA,4BACA,yBAuCsClF,KAAI,SAAAsF,GACxC,MAAO,CAACA,EAASuH,SAEnBtG,WAAYrF,OAAOgE,YAxCF,CACjB,yBACA,mBACA,2BACA,iBACA,kBACA,yBACA,WACA,+BACA,+BACA,iCACA,8BACA,yBACA,wBACA,2BACA,oBACA,2BACA,yBACA,gCACA,0BACA,2BACA,gCACA,+BACA,gCACA,iCACA,gCACA,qCACA,4BACA,sBACA,sBACA,qBACA,qBACA,oBAQ0ClF,KAAI,SAAA4I,GAC5C,MAAO,CAACA,EAAW8D,EAAU,UAkH/BK,OAnDK,CACL/H,aAAc0H,EAAU,IACxBnH,SAAUrE,OAAOgE,YA3DF,CACf,mBACA,oBACA,qBACA,6BACA,sBACA,mCACA,iCACA,0BACA,+BACA,4BACA,wBACA,sBACA,wBACA,2CACA,8BACA,yCACA,mBACA,oBACA,uBACA,wBACA,gCACA,8BACA,kCACA,+BACA,2BACA,0BACA,uBACA,gDACA,0CACA,6CACA,yBACA,8BACA,yBACA,+BACA,4BACA,gCACA,4BAsBsClF,KAAI,SAAAsF,GACxC,MAAO,CAACA,EAASuH,SAEnBtG,WAAYrF,OAAOgE,YAvBF,CACjB,WACA,+BACA,+BACA,8BACA,2BACA,gCACA,gCACA,+BACA,gCACA,iCACA,gCACA,qCACA,4BACA,sBACA,sBAQ0ClF,KAAI,SAAA4I,GAC5C,MAAO,CAACA,EAAW8D,EAAU,UA8C/BM,OAfK,CACLhI,aAAc0H,EAAU,IACxBnH,SAAUrE,OAAOgE,YA3BF,CACf,wBACA,wBACA,wBACA,wBACA,gBACA,4CACA,4CACA,mCACA,4BACA,kCACA,mCACA,kCACA,8BACA,8BACA,mBACA,sBACA,8BAUsClF,KAAI,SAAAsF,GACxC,MAAO,CAACA,EAASuH,SAEnBtG,WAAYrF,OAAOgE,YA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","file":"static/js/main.f4dcf802.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Loader.css';\r\n\r\nexport default function Loader() {\r\n  return (\r\n    <div className=\"loader\">\r\n      <div>\r\n        <div className=\"cube\">\r\n          <div></div>\r\n          <div></div>\r\n          <div></div>\r\n          <div></div>\r\n          <div></div>\r\n          <div></div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\n\r\nconst DataContext = React.createContext();\r\nexport default DataContext;\r\n","import React from 'react';\r\n\r\nexport default function ExclusiveSelection(props) {\r\n  const {id, items, currentItem, currentIndex, onSelect} = props;\r\n  return (\r\n    <React.Fragment>\r\n    {\r\n      items.map((item, i) => {\r\n        const itemId = `item-${id}-${i}`;\r\n        const checked = item === currentItem || i === currentIndex;\r\n        return (\r\n          <div key={itemId} className=\"radio\">\r\n            <input\r\n              type=\"radio\"\r\n              name={id}\r\n              id={itemId}\r\n              value={item}\r\n              checked={checked}\r\n              onClick={() => onSelect(item, i)}\r\n              onChange={_ => _}\r\n            />\r\n            <label htmlFor={itemId}>{item}</label>\r\n          </div>\r\n        );\r\n      })\r\n    }\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React, {useContext} from 'react';\r\nimport DataContext from './DataContext.js';\r\nimport ExclusiveSelection from './ExclusiveSelection.js';\r\n\r\nfunction getAPIs(data) {\r\n  const apis = new Set();\r\n  for (const category of data.categories) {\r\n    for (const name of Object.keys(category.api)) {\r\n      apis.add(name);\r\n    }\r\n  }\r\n  return [...apis.keys()];\r\n}\r\n\r\nexport default function APIs(props) {\r\n  const {data, setAPIName, apiName} = useContext(DataContext);\r\n  return (\r\n    <div>\r\n      <div className=\"heading\">API</div>\r\n      <div>\r\n        <ExclusiveSelection\r\n          id=\"apis\"\r\n          items={getAPIs(data)}\r\n          onSelect={setAPIName}\r\n          currentItem={apiName}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}","import React, {useContext} from 'react';\r\nimport DataContext from './DataContext.js';\r\nimport { ResponsiveContainer ,AreaChart, XAxis, YAxis, CartesianGrid, Tooltip, Area } from 'recharts';\r\n\r\nconst getPercent = (value, total) => {\r\n  const ratio = total > 0 ? value / total : 0;\r\n  return toPercent(ratio);\r\n};\r\n\r\nfunction Circle(props) {\r\n  const {color} = props;\r\n  return (\r\n    <svg style={{width: '1em', height: '1em'}} viewBox=\"0 0 40 40\" >\r\n      <circle cx=\"20\" cy=\"20\" r=\"20\" fill={color}/>\r\n    </svg>\r\n  );\r\n}\r\n\r\nconst toMonth = startMonth => v => (new Date(2000, (v + startMonth) % 12)).toLocaleString('default', { month: 'short' });\r\nconst toPercent = (decimal) => `${(decimal * 100).toFixed(0)}%`;\r\nconst renderTooltipContentImpl = valueFormatter => (o) => {\r\n  const { payload /*, label*/ } = o;\r\n  if (!payload) {\r\n    return [];\r\n  }\r\n  const total = payload.reduce((result, entry) => (result + entry.value), 0);\r\n  return (\r\n    <div className=\"tooltip-content legend\">\r\n        {\r\n          payload.reverse().map((entry, index) => (\r\n            <>\r\n              <div key={`item1-${index}`} className=\"color\"><Circle color={entry.color}/></div>\r\n              <div key={`item2-${index}`} className=\"value\">{entry.name}</div>\r\n              <div key={`item3-${index}`} className=\"percent\">{valueFormatter(entry.value, total)}</div>\r\n           </>\r\n          ))\r\n        }\r\n    </div>\r\n  );\r\n};\r\nconst renderTooltipContentPercentOfTotal = renderTooltipContentImpl(getPercent);\r\nconst renderTooltipContentPercent = renderTooltipContentImpl(v => `${(v * 100).toFixed(0)}%`);\r\n\r\nfunction Legend(props) {\r\n  const {data, colors , percentOfTotal} = props;\r\n  const categories = data.length\r\n      ? Object.keys(data[0]).filter(k => k !== 'month')\r\n      : [];\r\n  const last = data[data.length - 1];\r\n  const total = categories.reduce((sum, category) => sum + last[category], 0);\r\n  return (\r\n    <div className=\"legend\">\r\n      {\r\n        categories.reverse().map((category, i, array) => {\r\n          const percent = percentOfTotal\r\n              ? last[category] / total * 100\r\n              : last[category] * 100;\r\n          return (\r\n            <>\r\n              <div key={`l1-${i}`} className=\"color\"><Circle color={colors(array.length - i - 1)}/></div>\r\n              <div key={`l2-${i}`} className=\"value\">{category}</div>\r\n              <div key={`l3-${i}`} className=\"percent\">{percent.toFixed(0)}%</div>\r\n            </>\r\n          );\r\n        })\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nconst byNumber = (a, b) => Math.sign(parseFloat(b) - parseFloat(a));\r\n\r\nfunction dataToFeatureChartData(data, apiName, featureName, filter) {\r\n  const valuesToAmountsPerMonthMap = new Map();\r\n  data.categories.filter(filter).forEach(category => {\r\n    const api = category.api[apiName];\r\n    if (api) {\r\n      const feature = api.features[featureName];\r\n      if (feature) {\r\n        for (const [value, amountForEachMonth] of Object.entries(feature)) {\r\n          const amountsPerMonth = valuesToAmountsPerMonthMap.get(value) || [];\r\n          valuesToAmountsPerMonthMap.set(value, amountsPerMonth);\r\n          amountForEachMonth.forEach((amountForMonth, i) => {\r\n            amountsPerMonth[i] = (amountsPerMonth[i] || 0) + amountForMonth;\r\n          });\r\n        }\r\n      }\r\n    }\r\n  });\r\n  const values = [...valuesToAmountsPerMonthMap.keys()];\r\n  if (!values.length) {\r\n    return [];\r\n  }\r\n  const sortedValues = values.sort(byNumber);\r\n  const numMonths = valuesToAmountsPerMonthMap.get(values[0]).length;\r\n  const chartData = [];\r\n  for (let i = 0; i < numMonths; ++i) {\r\n    const column = Object.fromEntries([\r\n      ['month', i],\r\n      ...sortedValues.map(value => [value, valuesToAmountsPerMonthMap.get(value)[i]]),\r\n    ]);\r\n    chartData.push(column);\r\n  }\r\n\r\n  return chartData;\r\n}\r\n\r\nfunction dataToExtensionChartData(data, apiName, extensionName, filter) {\r\n  const totalDevicesByMonth = [];\r\n  const extensionByMonth = [];\r\n  data.categories.filter(filter).forEach(cat => {\r\n    cat.count.forEach((count, i) => {\r\n      totalDevicesByMonth[i] = (totalDevicesByMonth[i] || 0) + count;\r\n    });\r\n    const api = cat.api[apiName];\r\n    if (api) {\r\n      const countsByMonth = api.extensions[extensionName];\r\n      if (countsByMonth) {\r\n        countsByMonth.forEach((count, i) => {\r\n          extensionByMonth[i] = (extensionByMonth[i] || 0) + count;\r\n        });\r\n      }\r\n    }\r\n  });\r\n\r\n  const chartData = extensionByMonth.map((numExtension, i) => {\r\n    const column = Object.fromEntries([\r\n      ['month', i],\r\n      ['ext', numExtension / totalDevicesByMonth[i]],\r\n    ]);\r\n    return (column);\r\n  });\r\n\r\n  return chartData;\r\n}\r\n\r\nfunction dataToAPIChartData(data, apiName, filter) {\r\n  const totalDevicesByMonth = [];\r\n  const apiByMonth = [];\r\n  data.categories.filter(filter).forEach(cat => {\r\n    cat.count.forEach((count, i) => {\r\n      totalDevicesByMonth[i] = (totalDevicesByMonth[i] || 0) + count;\r\n    });\r\n    const api = cat.api[apiName];\r\n    if (api) {\r\n      api.availability.forEach((count, i) => {\r\n        apiByMonth[i] = (apiByMonth[i] || 0) + count;\r\n      });\r\n    }\r\n  });\r\n\r\n  const chartData = apiByMonth.map((numAPI, i) => {\r\n    const column = Object.fromEntries([\r\n      ['month', i],\r\n      ['api', numAPI / totalDevicesByMonth[i]],\r\n    ]);\r\n    return (column);\r\n  });\r\n\r\n  return chartData;\r\n}\r\n\r\nexport default function FooChart(props) {\r\n  const {\r\n    apiName,\r\n    colors,\r\n    data,\r\n    extensionName,\r\n    featureName,\r\n    filter,\r\n    showFeature,\r\n  } = useContext(DataContext);\r\n  const justAPI = !(featureName || extensionName);\r\n  const chartData = justAPI\r\n      ? dataToAPIChartData(data, apiName, filter)\r\n      : showFeature\r\n          ? dataToFeatureChartData(data, apiName, featureName, filter)\r\n          : dataToExtensionChartData(data, apiName, extensionName, filter);\r\n  const categories = chartData.length\r\n      ? Object.keys(chartData[0]).filter(k => k !== 'month')\r\n      : [];\r\n  const stackOffset = justAPI\r\n      ? 'none'\r\n      : showFeature ? 'expand' : 'none';\r\n  const percentOfTotal = stackOffset === 'expand';\r\n\r\n  return (\r\n    <div className=\"chart-holder\">\r\n      <div className=\"chart-heading\">\r\n        {`${apiName}${justAPI ? '' : `: ${showFeature ? featureName : extensionName}`}`}\r\n      </div>\r\n      <div className=\"chart\">\r\n        <div className=\"graph-area\">\r\n          <ResponsiveContainer>\r\n            <AreaChart\r\n              data={chartData}\r\n              stackOffset={stackOffset}\r\n              margin={{\r\n                top: 0, right: 20, left: 0, bottom: 0,\r\n              }}\r\n            >\r\n              <CartesianGrid strokeDasharray=\"3 3\" />\r\n              <XAxis\r\n                dataKey=\"month\"\r\n                tickFormatter={toMonth(5)} \r\n                tick={{ fill: 'var(--main-fg-color)' }}\r\n               />\r\n              <YAxis\r\n                tickFormatter={toPercent}\r\n                tick={{ fill: 'var(--main-fg-color)' }}\r\n                domain={percentOfTotal ? [0, 'dataMax'] : [0, 1]}\r\n              />\r\n              <Tooltip content={percentOfTotal ? renderTooltipContentPercentOfTotal : renderTooltipContentPercent} animationDuration={0} />\r\n              {categories.map((category, i) => {\r\n                const color = colors(i);\r\n                return <Area key={`c${i}`} type=\"monotoneX\" dataKey={category} stackId=\"1\" stroke={color} fillOpacity={1} fill={color} />;\r\n              })}\r\n            </AreaChart>\r\n          </ResponsiveContainer>\r\n        </div>\r\n        <div class=\"legend-area\">\r\n          <Legend data={chartData} colors={colors} percentOfTotal={percentOfTotal} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n","export function getPlatforms(data) {\r\n  const platforms = new Set();\r\n  for (const {platform} of data.categories) {\r\n    platforms.add(platform);\r\n  }\r\n  return [...platforms.keys()];\r\n}\r\n\r\nexport function getBrowsers(data) {\r\n  const browsers = new Set();\r\n  for (const {browser} of data.categories) {\r\n    browsers.add(browser);\r\n  }\r\n  return [...browsers.keys()];\r\n}\r\n","import React, {useContext} from 'react';\r\nimport DataContext from './DataContext.js';\r\nimport ExclusiveSelection from './ExclusiveSelection.js';\r\n\r\nfunction getExtensions(data, apiName) {\r\n  const extensions = new Set();\r\n  for (const category of data.categories) {\r\n    const api = category.api[apiName];\r\n    if (api) {\r\n      for (const extension of Object.keys(api.extensions)) {\r\n        extensions.add(extension);\r\n      }\r\n    }\r\n  }\r\n  return [...extensions.keys()];\r\n}\r\n\r\nexport default function Extensions(props) {\r\n  const {data, apiName, extensionName, setExtensionName} = useContext(DataContext);\r\n  return (\r\n    <div>\r\n      <div className=\"heading\">Extensions</div>\r\n      <div>\r\n        <ExclusiveSelection\r\n          id=\"extensions\"\r\n          items={getExtensions(data, apiName)}\r\n          onSelect={setExtensionName}\r\n          currentItem={extensionName}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\n\r\nexport default function MultipleSelection(props) {\r\n  const {id, items, selectedItems, onSelect} = props;\r\n  return (\r\n    <React.Fragment>\r\n    {\r\n      items.map((item, i) => {\r\n        const itemId = `item-${id}-${i}`;\r\n        const checked = selectedItems.has(item);\r\n        return (\r\n          <div key={itemId} className=\"radio\">\r\n            <input\r\n              type=\"checkbox\"\r\n              name={id}\r\n              id={itemId}\r\n              value={item}\r\n              checked={checked}\r\n              onChange={(e) => onSelect(item)}\r\n            />\r\n            <label htmlFor={itemId}>{item}</label>\r\n          </div>\r\n        );\r\n      })\r\n    }\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React, {useContext} from 'react';\r\nimport DataContext from './DataContext.js';\r\nimport MultipleSelection from './MultipleSelection.js';\r\nimport {getBrowsers, getPlatforms} from './data-utils.js';\r\n\r\nexport default function Filters(props) {\r\n  const {data, selectedPlatforms, selectedBrowsers, setPlatformFilter, setBrowserFilter} = useContext(DataContext);\r\n\r\n  const platforms = getPlatforms(data);\r\n  const browsers = getBrowsers(data);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"heading\">Filters</div>\r\n      <div>\r\n        <div className=\"indent\">\r\n          <div className=\"subheading\">Platform</div>\r\n          <MultipleSelection id=\"platforms\" items={platforms} selectedItems={selectedPlatforms} onSelect={setPlatformFilter} />\r\n        </div>\r\n        <div className=\"indent\">\r\n          <div className=\"subheading\">Browsers</div>\r\n          <MultipleSelection id=\"browsers\" items={browsers} selectedItems={selectedBrowsers} onSelect={setBrowserFilter} />\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}","import React, {useContext} from 'react';\r\nimport DataContext from './DataContext.js';\r\nimport ExclusiveSelection from './ExclusiveSelection.js';\r\n\r\nfunction getFeatures(data, apiName) {\r\n  const features = new Set();\r\n  for (const category of data.categories) {\r\n    const api = category.api[apiName];\r\n    if (api) {\r\n      for (const feature of Object.keys(api.features)) {\r\n        features.add(feature);\r\n      }\r\n    }\r\n  }\r\n  return [...features.keys()];\r\n}\r\n\r\nexport default function Features(props) {\r\n  const {data, apiName, featureName, setFeatureName} = useContext(DataContext);\r\n  return (\r\n    <div>\r\n      <div className=\"heading\">Features</div>\r\n      <div>\r\n        <ExclusiveSelection\r\n          id=\"features\"\r\n          items={getFeatures(data, apiName)}\r\n          onSelect={setFeatureName}\r\n          currentItem={featureName}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}","import React, {useState, useEffect} from 'react';\r\nimport {useSet} from 'react-use';\r\nimport * as d3 from 'd3';\r\nimport APIs from './APIs.js';\r\nimport AreaChart from './AreaChart.js';\r\nimport DataContext from './DataContext.js';\r\nimport {getBrowsers, getPlatforms} from './data-utils.js';\r\nimport Extensions from './Extensions.js';\r\nimport Filters from './Filters.js';\r\nimport Features from './Features.js';\r\n\r\nconst colors = i => d3.interpolatePiYG(i % 10 / 10).replace('rgb', 'rgba').replace(')', ',0.8)');\r\n\r\nfunction initSetFromString(str = '', validValues) {\r\n  const initialValues = str.split(',').filter(s => validValues.includes(s));\r\n  return new Set(initialValues.length ? initialValues : validValues);\r\n}\r\n\r\nexport default function RealApp (props) {\r\n  const {data} = props;\r\n  const q = Object.fromEntries(new URLSearchParams(window.location.search).entries());\r\n  const [apiName, setAPIName] = useState(q.api || 'webgl');\r\n  const [featureName, setFeatureName] = useState(q.featureName || '');\r\n  const [extensionName, setExtensionName] = useState(q.extensionName || '');\r\n  const [dataParam, setDataParam] = useState(q.data || '');\r\n\r\n  const allPlatforms = getPlatforms(data);\r\n  const allBrowsers = getBrowsers(data);\r\n\r\n  // not sure what the best model is here\r\n  const [showFeature, setShowFeature] = useState(true);\r\n  const [selectedPlatforms, selectedPlatformsSetAPI] = useSet(initSetFromString(q.platforms, allPlatforms));\r\n  const [selectedBrowsers, selectedBrowsersSetAPI] = useSet(initSetFromString(q.browsers, allBrowsers));\r\n  //const [set, { add, has, remove, toggle, reset }] = useSet(new Set(['hello']));\r\n\r\n  const handlePopState = () => {\r\n    const q = Object.fromEntries(new URLSearchParams(window.location.search).entries());\r\n    setDataParam(q.data || '')\r\n    setAPIName(q.api || 'webgl');\r\n    setFeatureName(q.featureName || '');\r\n    setExtensionName(q.extensionName || '');\r\n    selectedPlatformsSetAPI.reset();\r\n    (q.platforms || allPlatforms.join(',')).split(',').forEach(p => selectedPlatformsSetAPI.add(p));\r\n    selectedBrowsersSetAPI.reset();\r\n    (q.browsers || allBrowsers.join(',')).split(',').forEach(p => selectedBrowsersSetAPI.add(p));\r\n  };\r\n\r\n  useEffect(() => {\r\n    const q = {\r\n      ...(dataParam && {data: dataParam}),\r\n      api: apiName,\r\n      ...(showFeature && featureName && {featureName}),\r\n      ...(showFeature && extensionName && {extensionName}),\r\n      ...(selectedPlatforms.size !== allPlatforms.length && {features: [...selectedPlatforms].join(',')}),\r\n      ...(selectedBrowsers.size !== allBrowsers.length && {browsers: [...selectedBrowsers].join(',')}),\r\n    }\r\n    const params = new URLSearchParams(q);\r\n    const url = new URL(window.location.href);\r\n    url.search = params.toString();\r\n    if (url.href !== window.location.href) {\r\n      console.log('pushState:', url.href, window.location.href);\r\n      window.history.pushState({}, '', url.href);\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('popstate', handlePopState);\r\n    return () => window.removeEventListener('popstate', handlePopState);\r\n  });\r\n\r\n  // not sure what the best model is here\r\n  const setFeatureNameImpl = name => {\r\n    setFeatureName(showFeature && name === featureName ? '' : name);\r\n    //setExtensionName('');\r\n    setShowFeature(true);\r\n  };\r\n  const setExtensionNameImpl = name => {\r\n    //setFeatureName('');\r\n    setExtensionName(!showFeature && name === extensionName ? '' : name);\r\n    setShowFeature(false);\r\n  };\r\n\r\n  const setBrowserFilter = (name) => {\r\n    selectedBrowsersSetAPI.toggle(name);\r\n  };\r\n\r\n  const setPlatformFilter = (name) => {\r\n    selectedPlatformsSetAPI.toggle(name);\r\n  };\r\n\r\n  const filter = category => selectedBrowsers.has(category.browser) && selectedPlatforms.has(category.platform);\r\n\r\n  return (\r\n    <DataContext.Provider value={{\r\n      data,\r\n      apiName,\r\n      // meh!\r\n      featureName: showFeature ? featureName : '',\r\n      extensionName: showFeature ? '' : extensionName,\r\n      showFeature,\r\n      setAPIName,\r\n      setFeatureName: setFeatureNameImpl,\r\n      setExtensionName: setExtensionNameImpl,\r\n      selectedBrowsers,\r\n      selectedPlatforms,\r\n      setPlatformFilter,\r\n      setBrowserFilter,\r\n      colors,\r\n      filter,\r\n    }}>\r\n      <div className=\"main\">\r\n        <div className=\"left layout-scrollbar\">\r\n          <div className=\"menu\">\r\n            <APIs />\r\n            <Filters />\r\n            <Features />\r\n            <Extensions />\r\n          </div>\r\n        </div>\r\n        <div className=\"right layout-scrollbar\">\r\n          <div className=\"charts\">\r\n            <AreaChart />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </DataContext.Provider>\r\n  );\r\n}\r\n\r\n","const platforms = [\r\n  'windows10',\r\n  'mac',\r\n  'android',\r\n  'ios',\r\n  'linux',\r\n  'other',\r\n];\r\nconst browsers = [\r\n  'firefox',\r\n  'chrome',\r\n  'safari',\r\n  'other',\r\n];\r\n/*\r\nconst versions = [\r\n  '87',\r\n  '86',\r\n//  '89',\r\n];\r\nconst gpus = [\r\n  'nvidia 2070',\r\n//  'nvidia 2080ti',\r\n//  'amd radeon 123',\r\n  'mali 950',\r\n];\r\n*/\r\n\r\nfunction r(min, max) {\r\n  if (max === undefined) {\r\n    max = min;\r\n    min = 0;\r\n  }\r\n  return Math.random() * (max - min) + min | 0;\r\n}\r\n\r\nfunction randArray(num) {\r\n  const arr = [];\r\n  for (let i = 0; i < num; ++i) {\r\n    arr.push(r(0, 400));\r\n  }\r\n  return arr;\r\n}\r\n\r\n/*\r\nfunction randDoubleArray(num) {\r\n  const arr = [];\r\n  for (let i = 0; i < num; ++i) {\r\n    arr.push([r(0, 400), 2 ** r(16)]);\r\n  }\r\n  return arr;\r\n}\r\n*/\r\n\r\nfunction randFeature() {\r\n  const arr = {};\r\n  const num = r(2, 4);\r\n  for (let i = 0; i < num; ++i) {\r\n    arr[(2 ** r(16)).toString()] = randArray(12);\r\n  }\r\n  return arr;\r\n}\r\n\r\nfunction getWebGLData() {\r\n  const features = [\r\n    'ALIASED_LINE_WIDTH_RANGE',\r\n    'ALIASED_POINT_SIZE_RANGE',\r\n    'MAX_TEXTURE_SIZE',\r\n    'MAX_VIEWPORT_DIMS',\r\n    'MAX_VERTEX_ATTRIBS',\r\n    'MAX_VERTEX_UNIFORM_VECTORS',\r\n    'MAX_VARYING_VECTORS',\r\n    'MAX_COMBINED_TEXTURE_IMAGE_UNITS',\r\n    'MAX_VERTEX_TEXTURE_IMAGE_UNITS',\r\n    'MAX_TEXTURE_IMAGE_UNITS',\r\n    'MAX_FRAGMENT_UNIFORM_VECTORS',\r\n    'MAX_CUBE_MAP_TEXTURE_SIZE',\r\n    'MAX_RENDERBUFFER_SIZE',\r\n  ];\r\n  const extensions = [\r\n    'ANGLE_instanced_arrays',\r\n    'EXT_blend_minmax',\r\n    'EXT_disjoint_timer_query',\r\n    'EXT_frag_depth',\r\n    'EXT_float_blend',\r\n    'EXT_shader_texture_lod',\r\n    'EXT_sRGB',\r\n    'EXT_texture_compression_bptc',\r\n    'EXT_texture_compression_rgtc',\r\n    'EXT_texture_filter_anisotropic',\r\n    'KHR_parallel_shader_compile',\r\n    'OES_element_index_uint',\r\n    'OES_fbo_render_mipmap',\r\n    'OES_standard_derivatives',\r\n    'OES_texture_float',\r\n    'OES_texture_float_linear',\r\n    'OES_texture_half_float',\r\n    'OES_texture_half_float_linear',\r\n    'OES_vertex_array_object',\r\n    'WEBGL_color_buffer_float',\r\n    'WEBGL_compressed_texture_astc',\r\n    'WEBGL_compressed_texture_etc',\r\n    'WEBGL_compressed_texture_etc1',\r\n    'WEBGL_compressed_texture_pvrtc',\r\n    'WEBGL_compressed_texture_s3tc',\r\n    'WEBGL_compressed_texture_s3tc_srgb',\r\n    'WEBGL_debug_renderer_info',\r\n    'WEBGL_debug_shaders',\r\n    'WEBGL_depth_texture',\r\n    'WEBGL_draw_buffers',\r\n    'WEBGL_lose_context',\r\n    'WEBGL_multi_draw',\r\n  ];\r\n\r\n  return {\r\n    availability: randArray(12),\r\n    features: Object.fromEntries(features.map(feature => {\r\n      return [feature, randFeature(12)];\r\n    })),\r\n    extensions: Object.fromEntries(extensions.map(extension => {\r\n      return [extension, randArray(12)];\r\n    })),\r\n  };\r\n}\r\n\r\nfunction getWebGL2Data() {\r\n  const features = [\r\n    'MAX_TEXTURE_SIZE',\r\n    'MAX_VIEWPORT_DIMS',\r\n    'MAX_VERTEX_ATTRIBS',\r\n    'MAX_VERTEX_UNIFORM_VECTORS',\r\n    'MAX_VARYING_VECTORS',\r\n    'MAX_COMBINED_TEXTURE_IMAGE_UNITS',\r\n    'MAX_VERTEX_TEXTURE_IMAGE_UNITS',\r\n    'MAX_TEXTURE_IMAGE_UNITS',\r\n    'MAX_FRAGMENT_UNIFORM_VECTORS',\r\n    'MAX_CUBE_MAP_TEXTURE_SIZE',\r\n    'MAX_RENDERBUFFER_SIZE',\r\n    'MAX_3D_TEXTURE_SIZE',\r\n    'MAX_COLOR_ATTACHMENTS',\r\n    'MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS',\r\n    'MAX_COMBINED_UNIFORM_BLOCKS',\r\n    'MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS',\r\n    'MAX_DRAW_BUFFERS',\r\n    'MAX_ELEMENT_INDEX',\r\n    'MAX_ELEMENTS_INDICES',\r\n    'MAX_ELEMENTS_VERTICES',\r\n    'MAX_FRAGMENT_INPUT_COMPONENTS',\r\n    'MAX_FRAGMENT_UNIFORM_BLOCKS',\r\n    'MAX_FRAGMENT_UNIFORM_COMPONENTS',\r\n    'MAX_FRAGMENT_UNIFORM_VECTORS',\r\n    'MAX_PROGRAM_TEXEL_OFFSET',\r\n    'MAX_SERVER_WAIT_TIMEOUT',\r\n    'MAX_TEXTURE_LOD_BIAS',\r\n    'MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS',\r\n    'MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS',\r\n    'MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS',\r\n    'MAX_UNIFORM_BLOCK_SIZE',\r\n    'MAX_UNIFORM_BUFFER_BINDINGS',\r\n    'MAX_VARYING_COMPONENTS',\r\n    'MAX_VERTEX_OUTPUT_COMPONENTS',\r\n    'MAX_VERTEX_UNIFORM_BLOCKS',\r\n    'MAX_VERTEX_UNIFORM_COMPONENTS',\r\n    'MIN_PROGRAM_TEXEL_OFFSET',\r\n  ];\r\n  const extensions = [\r\n    'EXT_sRGB',\r\n    'EXT_texture_compression_bptc',\r\n    'EXT_texture_compression_rgtc',\r\n    'KHR_parallel_shader_compile',\r\n    'OES_texture_float_linear',\r\n    'OES_texture_half_float_linear',\r\n    'WEBGL_compressed_texture_astc',\r\n    'WEBGL_compressed_texture_etc',\r\n    'WEBGL_compressed_texture_etc1',\r\n    'WEBGL_compressed_texture_pvrtc',\r\n    'WEBGL_compressed_texture_s3tc',\r\n    'WEBGL_compressed_texture_s3tc_srgb',\r\n    'WEBGL_debug_renderer_info',\r\n    'WEBGL_debug_shaders',\r\n    'WEBGL_lose_context',\r\n  ];\r\n\r\n  return {\r\n    availability: randArray(12),\r\n    features: Object.fromEntries(features.map(feature => {\r\n      return [feature, randFeature(12)];\r\n    })),\r\n    extensions: Object.fromEntries(extensions.map(extension => {\r\n      return [extension, randArray(12)];\r\n    })),\r\n  };\r\n}\r\n\r\nfunction getWebGPUData() {\r\n  const features = [\r\n    'maxTextureDimension1D',\r\n    'maxTextureDimension2D',\r\n    'maxTextureDimension3D',\r\n    'maxTextureArrayLayers',\r\n    'maxBindGroups',\r\n    'maxDynamicUniformBuffersPerPipelineLayout',\r\n    'maxDynamicStorageBuffersPerPipelineLayout',\r\n    'maxSampledTexturesPerShaderStage',\r\n    'maxSamplersPerShaderStage',\r\n    'maxStorageBuffersPerShaderStage',\r\n    'maxStorageTexturesPerShaderStage',\r\n    'maxUniformBuffersPerShaderStage',\r\n    'maxUniformBufferBindingSize',\r\n    'maxStorageBufferBindingSize',\r\n    'maxVertexBuffers',\r\n    'maxVertexAttributes',\r\n    'maxVertexBufferArrayStride',\r\n  ];\r\n  const extensions = [\r\n    'shader-float16',\r\n    'texture-compression-bc',\r\n    'depth-clamping',\r\n  ];\r\n\r\n  return {\r\n    availability: randArray(12),\r\n    features: Object.fromEntries(features.map(feature => {\r\n      return [feature, randFeature(12)];\r\n    })),\r\n    extensions: Object.fromEntries(extensions.map(extension => {\r\n      return [extension, randArray(12)];\r\n    })),\r\n  };\r\n}\r\n\r\nfunction getAPIData() {\r\n  return {\r\n    webgl: getWebGLData(),\r\n    webgl2: getWebGL2Data(),\r\n    webgpu: getWebGPUData(),\r\n  };\r\n}\r\n\r\nconst categories = [];\r\nfor (const platform of platforms) {\r\n  for (const browser of browsers) {\r\n//    for (const version of versions) {\r\n//      for (const gpu of gpus) {\r\n        const category = {\r\n          platform,\r\n          browser,\r\n//          version,\r\n//          gpu,\r\n          count: randArray(12).map(v => v + 400),\r\n          api: getAPIData(),\r\n        };\r\n        categories.push(category);\r\n//      }\r\n//    }\r\n  }\r\n}\r\n\r\n/*\r\n                                           +--just a count by month\r\n                                           |\r\n                                           V\r\nsafari, v14, iOS, ANGLE_instanced_arrays: [4, 14, 32, 44]\r\nchrome, v88, MacOS, ANGLE_instanced_arrays: [9, 13, 53, 155]\r\n\r\n                                           +--pair: count, value\r\n                                           |\r\n                                           V\r\nsafari, v14, iOS, MAX_RENDER_BUFFER: [[12, '32'], [123, '64']]\r\nsafari, v14, iOS, MAX_VIEWPORT_DIMS: [[12, '32, 32'], [123, '64, 32']]\r\n\r\n*/\r\n/*\r\nconst data = {\r\n  categories: [\r\n    {\r\n      platform: 'windows',\r\n      browser: 'firefox',\r\n      version: '87',\r\n      gpu: 'nvidia 2070',\r\n      device: 'tablet',\r\n      count: [?, ?, ?], // by (this is the total samples)\r\n      api: {\r\n        webgl: {\r\n          features: {\r\n            'MAX_TEXTURE_SIZE': {\r\n              '2048': 120,\r\n              '4096': 2000,\r\n            },\r\n          },\r\n        },\r\n      },\r\n    }\r\n  ],\r\n}\r\n*/\r\n\r\nconst sampleData = {\r\n  startMonth: 1,\r\n  categories,\r\n};\r\n\r\nconsole.log(JSON.stringify(sampleData));\r\n\r\n//console.log(JSON.stringify(data, null, 2).replace(/\\[\\s*\\d+(?:,\\s+\\d+)*\\s*\\]/g, _ => _.replace(/[\\n ]+/g, ' ')));\r\n//console.log(JSON.stringify(data).length);\r\n//console.log(JSON.stringify(data));\r\n\r\n\r\n/*\r\n  checked replacing all strings with ids\r\n  to string so a string like 'WEBGL_debug_info'\r\n  that appears 50 times is replaced by `AB`\r\n  and a map of `AB` to `WEBGL_debug_info`\r\n\r\n  This decreased the uncompressed size from\r\n  25% but the gzipped size was only decreased\r\n  5% so probably not worth it. a 1meg download\r\n  becomes 0.95 meg.\r\n\r\n{\r\n  const comp = compress(data);\r\n  console.log(JSON.stringify(comp).length);\r\n  console.log(JSON.stringify(comp));\r\n}\r\n*/\r\n\r\nconst wait = ms => new Promise(resolve => setTimeout(resolve, ms));\r\n\r\nexport async function getData() {\r\n  const q = Object.fromEntries(new URLSearchParams(window.location.search).entries());\r\n\r\n  let error;\r\n  let data;\r\n  let url;\r\n  if (q.data === 'test') {\r\n    url = 'test-data.json';\r\n  } else if (q.data === 'error') {\r\n    url = 'not-exist-data.json';\r\n  } else if (q.data === 'sample') {\r\n    await wait(1000);\r\n    data = sampleData;\r\n  } else if (!q.data) {\r\n    url = 'data.json';\r\n  } else {\r\n    error = `unknown data parameter: ${q.data}`;\r\n  }\r\n\r\n  if (!error && !data) {\r\n    try {\r\n      const req = await fetch(url);\r\n      data = await req.json();\r\n    } catch (e) {\r\n      error = `${url}: ${e}`;\r\n    }\r\n  }\r\n\r\n  return {data, error};\r\n}\r\n\r\n\r\n","import React, {useState, useEffect} from 'react';\nimport './App.css';\nimport Loader from './Loader.js';\nimport RealApp from './RealApp.js';\nimport {getData} from './data';\n\nfunction Error(props) {\n  const {msg} = props;\n  return (<div className=\"error\"><div>{msg} 😢</div></div>);\n}\n\nexport default function App (props) {\n  const [data, setData] = useState(false);\n  const [error, setError] = useState(false);\n\n  const q = Object.fromEntries(new URLSearchParams(window.location.search).entries());\n\n  useEffect(() => {\n    (async() => {\n      const {data, error} = await getData();\n      setData(data);\n      setError(error);\n    })();\n  }, []); // this [] means no dependencies so never need to rerun this effect\n\n  return (\n    <div className=\"App\">\n      <div className=\"header\">\n        <div>gpustats.org{' '}{q.data ? <span className=\"fake\">(Warning: Using fake data!)</span> : []}</div>\n        <div>\n          <a href=\"https://github.com/gfxfundamentals/gpustats.org\">\n            <img className=\"icon\" alt=\"github icon\" src=\"resources/images/octocat-icon.svg\" />\n          </a>\n          </div>\n      </div>\n      {\n        error\n          ? <Error msg={`could not fetch data: ${error}`} />\n            : data \n              ? <RealApp data={data} />\n              : <Loader />\n      }\n      {\n        !q.data\n          ? <div className=\"rsn\">\n              <div>This site is not ready. No data is available yet.{' '}\n                <a href=\"?data=sample\">Click here</a>{' '}to view with fake data.\n              </div>\n            </div>\n          : []\n      }\n    </div>\n  );\n}\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import './scrollbars.css';\n\n/*\n * Scrollbar Width Test\n * Adds `layout-scrollbar-obtrusive` class to body if scrollbars use up screen real estate\n */\nconst parent = document.createElement(\"div\");\nparent.setAttribute(\"style\", \"width:30px;height:30px;\");\nparent.classList.add('scrollbar-test');\n\nconst child = document.createElement(\"div\");\nchild.setAttribute(\"style\", \"width:100%;height:40px\");\nparent.appendChild(child);\ndocument.body.appendChild(parent);\n\n// Measure the child element, if it is not\n// 30px wide the scrollbars are obtrusive.\nconst scrollbarWidth = 30 - parent.firstChild.clientWidth;\nif(scrollbarWidth) {\n  document.body.classList.add(\"layout-scrollbar-obtrusive\");\n}\n\ndocument.body.removeChild(parent);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './scrollbars.js';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}